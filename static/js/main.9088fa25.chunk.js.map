{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","_lines$i","Object","_home_jefferson_node_projects_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_6__","a","b","c","Square","props","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","onClick","value","Board","_this","this","renderSquare","React","Component","Game","_this2","_home_jefferson_node_projects_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_jefferson_node_projects_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_jefferson_node_projects_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","_home_jefferson_node_projects_my_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","step","status","_this3","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"+NAIA,SAASA,EAAgBC,GAWrB,IAVA,IAAMC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,KAAAE,EAAAC,OAAAC,EAAA,EAAAD,CACjBJ,EAAMC,GADW,GAC5BK,EAD4BH,EAAA,GACzBI,EADyBJ,EAAA,GACtBK,EADsBL,EAAA,GAEnC,GAAIJ,EAAQO,IAAMP,EAAQO,KAAOP,EAAQQ,IAAMR,EAAQO,KAAOP,EAAQS,GAClE,OAAOT,EAAQO,GAGvB,OAAO,KAGX,SAASG,EAAOC,GACZ,OACIC,EAAAL,EAAAM,cAAA,UACIC,UAAU,SACVC,QAAUJ,EAAMI,SAEdJ,EAAMK,WAKdC,uLACWf,GAAG,IAAAgB,EAAAC,KACZ,OACIP,EAAAL,EAAAM,cAACH,EAAD,CACIM,MAAQG,KAAKR,MAAMX,QAAQE,GAC3Ba,QAAU,kBAAMG,EAAKP,MAAMI,QAAQb,uCAM3C,OACIU,EAAAL,EAAAM,cAAA,WACID,EAAAL,EAAAM,cAAA,OAAKC,UAAU,aACVK,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAGvBR,EAAAL,EAAAM,cAAA,OAAKC,UAAU,aACVK,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAGvBR,EAAAL,EAAAM,cAAA,OAAKC,UAAU,aACVK,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,YA5BnBC,IAAMC,WAmCpBC,cACF,SAAAA,EAAYZ,GAAO,IAAAa,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAc,KAAAI,IACfC,EAAAnB,OAAAqB,EAAA,EAAArB,CAAAc,KAAAd,OAAAsB,EAAA,EAAAtB,CAAAkB,GAAAK,KAAAT,KAAMR,KACDkB,MAAQ,CACTC,QAAS,CAAC,CAAE9B,QAAS+B,MAAM,GAAGC,KAAK,QACnCC,WAAY,EACZC,SAAS,GALEV,2EASPtB,GACR,IAAM4B,EAAUX,KAAKU,MAAMC,QAAQK,MAAM,EAAGhB,KAAKU,MAAMI,WAAa,GAE9DjC,EADU8B,EAAQA,EAAQ3B,OAAS,GACjBH,QAAQmC,QAC5BpC,EAAgBC,IAAYA,EAAQE,KAExCF,EAAQE,GAAKiB,KAAKU,MAAMK,QAAU,IAAM,IACxCf,KAAKiB,SAAS,CACVN,QAAO,GAAAO,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAMyB,GAAN,CAAe,CAAE9B,QAASA,KACjCiC,WAAYH,EAAQ3B,OACpB+B,SAAUf,KAAKU,MAAMK,0CAItBK,GACHpB,KAAKiB,SAAS,CACVH,WAAYM,EACZL,UAAkB,EAAPK,sCAIV,IAcDC,EAdCC,EAAAtB,KACCW,EAAUX,KAAKU,MAAMC,QACrBY,EAAUZ,EAAQX,KAAKU,MAAMI,YAC7BU,EAAS5C,EAAgB2C,EAAQ1C,SAEjC4C,EAAQd,EAAQe,IAAI,SAACN,EAAMO,GAC7B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,mBAC5C,OACIlC,EAAAL,EAAAM,cAAA,MAAImC,IAAMF,GACNlC,EAAAL,EAAAM,cAAA,UAAQE,QAAU,kBAAM0B,EAAKQ,OAAOH,KAAUC,MAS1D,OAHYP,EAARG,EAAiB,WAAaA,EACpB,iBAAmBxB,KAAKU,MAAMK,QAAU,IAAM,KAGxDtB,EAAAL,EAAAM,cAAA,OAAKC,UAAU,QACXF,EAAAL,EAAAM,cAAA,OAAKC,UAAU,cACXF,EAAAL,EAAAM,cAACI,EAAD,CACIjB,QAAU0C,EAAQ1C,QAClBe,QAAU,SAACb,GAAD,OAAOuC,EAAKS,YAAYhD,OAI1CU,EAAAL,EAAAM,cAAA,OAAKC,UAAU,aACXF,EAAAL,EAAAM,cAAA,WAAO2B,GACP5B,EAAAL,EAAAM,cAAA,UAAM+B,YA5DPvB,IAAMC,WAqEzB6B,IAASC,OACLxC,EAAAL,EAAAM,cAACU,EAAD,MACA8B,SAASC,eAAe","file":"static/js/main.9088fa25.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\nfunction Square(props) {\n    return (\n        <button\n            className=\"square\"\n            onClick={ props.onClick }\n        >\n            { props.value }\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square\n                value={ this.props.squares[i] }\n                onClick={ () => this.props.onClick(i) }\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{ squares: Array(9).fill(null) },],\n            stepNumber: 0,\n            xIsNext: true,\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) return;\n\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: [...history, { squares: squares }],\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: !(step & 1),\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ? 'Go to move #' + move : 'Go to game start';\n            return (\n                <li key={ move }>\n                    <button onClick={ () => this.jumpTo(move) }>{ desc }</button>\n                </li>\n            )\n        });\n\n        let status;\n        if (winner) status = 'Winner: ' + winner;\n        else status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={ current.squares }\n                        onClick={ (i) => this.handleClick(i) }\n                    />\n                </div>\n\n                <div className=\"game-info\">\n                    <div>{ status }</div>\n                    <ol>{ moves }</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}