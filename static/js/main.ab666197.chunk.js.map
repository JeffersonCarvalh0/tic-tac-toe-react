{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","_lines$i","Object","_home_jefferson_node_projects_my_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_6__","a","b","c","Square","props","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","squareClass","onClick","value","Board","_this","this","winners","rows","rowCells","j","cell","push","key","renderSquare","React","Component","HistoryButton","desc","move","concat","step","coord","x","y","thick","stepNumber","Game","_this2","_home_jefferson_node_projects_my_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_jefferson_node_projects_my_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_jefferson_node_projects_my_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","xIsNext","reversed","slice","current","last","parseInt","winnerSquares","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","setState","_home_jefferson_node_projects_my_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","_this3","jumpTo","status","_this4","winner","moves","map","renderHistoryButton","every","buttonOrderText","handleClick","reverse","toggleOrder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab666197.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return lines[i];\n        }\n    }\n    return null;\n}\n\nfunction Square(props) {\n    return (\n        <button\n            className={ props.squareClass }\n            onClick={ props.onClick }\n        >\n            { props.value }\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        return (\n            <Square\n                value={ this.props.squares[i] }\n                squareClass={ this.props.winners[i] ? \"square square-winner\" : \"square\" }\n                onClick={ () => this.props.onClick(i) }\n            />\n        );\n    }\n\n    render() {\n        const rows = [];\n\n        for (let i = 0; i < 3; ++i) {\n            const rowCells = [];\n            for (let j = 0; j < 3; ++j) {\n                const cell = 3 * i + j;\n                rowCells.push(<span key={cell}> { this.renderSquare(cell) } </span>);\n            }\n            rows.push(<div className=\"board-row\" key={i}> { rowCells } </div>);\n        }\n\n        return <div> { rows } </div>;\n    }\n}\n\nfunction HistoryButton(props) {\n    const desc = props.move ? `Go to move #${props.move} (${props.step.coord.x}, ${props.step.coord.y})` : 'Go to game start';\n    const thick = props.move === props.stepNumber ? \"thick\" : \"\";\n\n    return (\n        <li key={ props.move }>\n            <button onClick={ () => props.onClick(props.move) }>\n                <p className={ thick }>{ desc }</p>\n            </button>\n        </li>\n    );\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n                coord: { x : null, y: null },\n                winners: Array(9).fill(false),\n            }],\n            stepNumber: 0,\n            xIsNext: true,\n            reversed: false,\n        };\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        let current = history[history.length - 1];\n        const squares = current.squares.slice();\n        const last = { x : parseInt(i / 3) + 1, y: parseInt(i % 3) + 1 };\n        let winnerSquares = calculateWinner(current.squares);\n\n        if (winnerSquares || squares[i]) return;\n\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        winnerSquares = calculateWinner(squares);\n        const winners = current.winners.slice();\n\n        if (winnerSquares) {\n            for (let winnerSquare of winnerSquares)\n                winners[winnerSquare] = true;\n        }\n\n        this.setState({\n            history: [...history, { squares: squares, coord: last, winners: winners.slice() }],\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: !(step & 1),\n        });\n    }\n\n    renderHistoryButton(move) {\n        return (\n            <HistoryButton\n                move={ move }\n                step={ this.state.history[move] }\n                stepNumber={ this.state.stepNumber }\n                onClick={ (step) => this.jumpTo(step) }\n            />\n        );\n    }\n\n    toggleOrder() {\n        this.setState({\n            reversed: !this.state.reversed,\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winnerSquares = calculateWinner(current.squares);\n        const winner = winnerSquares ? current.squares[winnerSquares[0]] : null;\n\n        const moves = history.map((step, move) => {\n            return this.renderHistoryButton(move);\n        });\n\n        let status;\n        if (winner) status = 'Winner: ' + winner;\n        else if (!winner && current.squares.every(value => value)) status = \"Draw\";\n        else status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\n        const buttonOrderText = this.state.reversed ? \"Descending\" : \"Ascending\";\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board\n                        squares={ current.squares }\n                        winners={ current.winners }\n                        onClick={ (i) => this.handleClick(i) }\n                    />\n                </div>\n\n                <div className=\"game-info\">\n                    <div>{ status }</div>\n                    <ol>{ this.state.reversed ? moves.reverse() : moves }</ol>\n                </div>\n\n                <div className=\"game-info\">\n                    <button onClick={ () => this.toggleOrder() }>\n                        { buttonOrderText }\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}